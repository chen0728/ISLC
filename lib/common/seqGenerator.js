// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, SeqGenerator, commonClient;

  commonClient = require(process.cwd() + '/configs/serviceClients').commonClient;

  Promise = require('bluebird');

  SeqGenerator = (function() {
    function SeqGenerator() {}

    SeqGenerator.prototype.getNext = function(type, pad) {
      var para;
      para = {
        system: true,
        parameters: {
          type: type
        }
      };
      if (pad) {
        para.parameters.pad = pad;
      }
      return commonClient.get('/sequences/next', para).then(function(response) {
        if (response && response.body && response.body.data) {
          return Promise.resolve(response.body.data);
        } else {
          return Promise.reject({
            errCode: 500,
            errText: response.statusMessage
          });
        }
      });
    };

    SeqGenerator.prototype.getMulti = function(type, count, pad) {
      var para;
      para = {
        system: true,
        parameters: {
          type: type,
          count: count
        }
      };
      if (pad) {
        para.parameters.pad = pad;
      }
      if (count === 0) {
        Promise.resolve([]);
      }
      return commonClient.get('/sequences/Multi', para).then(function(response) {
        if (response && response.body && response.body.data) {
          return Promise.resolve(response.body.data);
        } else {
          return Promise.reject({
            errCode: response.statusCode,
            errText: response.statusMessage
          });
        }
      });
    };

    return SeqGenerator;

  })();

  module.exports = new SeqGenerator();

}).call(this);
